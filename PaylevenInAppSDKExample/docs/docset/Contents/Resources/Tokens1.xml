<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PLVCreditCardPaymentInstrument.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PLVCreditCardPaymentInstrument</TokenIdentifier>
			<Abstract type="html">PLVCreditCardPaymentInstrument      CrediCard PaymentInstrument</Abstract>
			<DeclaredIn>PLVInAppClientTypes.h</DeclaredIn>
            
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PLVCreditCardPaymentInstrument/validatePan:withError:</TokenIdentifier>
			<Abstract type="html">validatePan:withError:</Abstract>
			<DeclaredIn>PLVInAppClientTypes.h</DeclaredIn>
			
			<Declaration>+ (BOOL)validatePan:(NSString *)pan withError:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>pan</Name>
					<Abstract type="html">the pan value to validate</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">resulting validation error, will not be set if string passed the validation</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">TRUE for a valid pan string ... otherwise FALSE</Abstract></ReturnValue>
			<Anchor>//api/name/validatePan:withError:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PLVCreditCardPaymentInstrument/validateExpiryMonth:andYear:withError:</TokenIdentifier>
			<Abstract type="html">validateExpiryMonth:andYear:withError:</Abstract>
			<DeclaredIn>PLVInAppClientTypes.h</DeclaredIn>
			
			<Declaration>+ (BOOL)validateExpiryMonth:(NSInteger)month andYear:(NSInteger)year withError:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>month</Name>
					<Abstract type="html">the month value to validate</Abstract>
				</Parameter><Parameter>
					<Name>year</Name>
					<Abstract type="html">the year value to validate</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">resulting validation error, will not be set if string passed the validation</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">TRUE for a valid month/year combination  ... otherwise FALSE</Abstract></ReturnValue>
			<Anchor>//api/name/validateExpiryMonth:andYear:withError:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PLVCreditCardPaymentInstrument/validateCVV:withError:</TokenIdentifier>
			<Abstract type="html">validateCVV:withError:</Abstract>
			<DeclaredIn>PLVInAppClientTypes.h</DeclaredIn>
			
			<Declaration>+ (BOOL)validateCVV:(NSString *)cvv withError:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>cvv</Name>
					<Abstract type="html">the cvv value to validate</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">resulting validation error, will not be set if string passed the validation</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">TRUE for a valid cvv string ... otherwise FALSE

attention: final cvv validation needs a attached pan ...
so it can possible a value pass validation on this function and fail on validation on try to add a paymentinstrument
refer to the resulting error</Abstract></ReturnValue>
			<Anchor>//api/name/validateCVV:withError:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PLVCreditCardPaymentInstrument/validateCardHolder:withError:</TokenIdentifier>
			<Abstract type="html">validateCardHolder:withError:</Abstract>
			<DeclaredIn>PLVInAppClientTypes.h</DeclaredIn>
			
			<Declaration>+ (BOOL)validateCardHolder:(NSString *)cardHolder withError:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>cardHolder</Name>
					<Abstract type="html">the cardHolder value to validate</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">resulting      validation error, will not be set if string passed the validation</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">TRUE for a valid cardHolder string ... otherwise FALSE</Abstract></ReturnValue>
			<Anchor>//api/name/validateCardHolder:withError:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
        
        
	</File>
</Tokens>